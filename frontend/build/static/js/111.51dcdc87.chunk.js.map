{"version":3,"file":"static/js/111.51dcdc87.chunk.js","mappings":"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","sources":["ShopifyIntegrationsPanel.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { FaShopify } from \"react-icons/fa\";\r\nimport api from \"./api\";\r\nimport { saveCart, loadCart } from \"./chatStorage\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nexport default function ShopifyIntegrationsPanel({ activeUser }) {\r\n  const API_BASE = process.env.REACT_APP_API_BASE || \"\";\r\n\r\n  const [customer, setCustomer] = useState(null);\r\n  const [customersList, setCustomersList] = useState([]);\r\n  const [selectedCustomerId, setSelectedCustomerId] = useState(null);\r\n  const [selectedAddressIdx, setSelectedAddressIdx] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const normalizePhone = (phone) => {\r\n    if (!phone) return \"\";\r\n    if (phone.startsWith(\"+\")) return phone;\r\n    if (phone.length === 12 && phone.startsWith(\"212\")) return \"+\" + phone;\r\n    if (phone.length === 10 && phone.startsWith(\"06\")) return \"+212\" + phone.slice(1);\r\n    return phone;\r\n  }; \r\n\r\n  // Collapsible sections\r\n  const [showInfo, setShowInfo] = useState(true);\r\n  const [showCreate, setShowCreate] = useState(false);\r\n\r\n  // Order details state\r\n  const [orderData, setOrderData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    province: \"\",\r\n    zip: \"\",\r\n    order_note: \"\",\r\n    order_image_url: \"\",\r\n    complete_now: false,\r\n  });\r\n\r\n  // Automation Studio navigates to separate page\r\n\r\n  // Product search & selection\r\n  const [productSearch, setProductSearch] = useState(\"\");\r\n  const [products, setProducts] = useState([]);\r\n  const [variantIdInput, setVariantIdInput] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [deliveryOption, setDeliveryOption] = useState(\"\");\r\n  const [paymentTerm, setPaymentTerm] = useState(\"due_on_receipt\");\r\n  const [market] = useState(\"Moroccan market\");\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [lastResult, setLastResult] = useState(null);\r\n\r\n  // Customer search and creation options\r\n  const [customerSearchInput, setCustomerSearchInput] = useState(\"\");\r\n  const [customerSearchResults, setCustomerSearchResults] = useState([]);\r\n  const [isSearchingCustomers, setIsSearchingCustomers] = useState(false);\r\n  const [createCustomerIfMissing, setCreateCustomerIfMissing] = useState(true);\r\n\r\n  const MOROCCO_PROVINCES = [\r\n    'Marrakech-Safi','Casablanca-Settat','Rabat-Salé-Kénitra','Fès-Meknès','Tanger-Tétouan-Al Hoceïma',\r\n    'Drâa-Tafilalet','Souss-Massa','Beni Mellal-Khénifra','Oriental','Guelmim-Oued Noun',\r\n    'Laâyoune-Sakia El Hamra',\"Dakhla-Oued Ed-Dahab\"\r\n  ];\r\n\r\n  // Fetch shipping methods on mount\r\n  useEffect(() => {\r\n    api.get(`${API_BASE}/shopify-shipping-options`)\r\n      .then(res => {\r\n        setShippingOptions(res.data);\r\n        if (res.data.length) setDeliveryOption(res.data[0].name);\r\n      }).catch(() => setShippingOptions([]));\r\n  }, [API_BASE]);\r\n\r\n  // Fetch customer info\r\n  useEffect(() => {\r\n    if (!activeUser?.phone) {\r\n      setCustomer(null);\r\n      setCustomersList([]);\r\n      setSelectedCustomerId(null);\r\n      setSelectedAddressIdx(0);\r\n      setOrderData({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: activeUser?.phone || \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        province: \"\",\r\n        zip: \"\",\r\n        order_note: \"\",\r\n        order_image_url: \"\",\r\n        complete_now: false,\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setErrorMsg(\"\");\r\n    Promise.all([\r\n      api.get(`${API_BASE}/search-customer?phone_number=${encodeURIComponent(activeUser.phone)}`)\r\n        .catch(() => null),\r\n      api.get(`${API_BASE}/search-customers-all?phone_number=${encodeURIComponent(activeUser.phone)}`)\r\n        .catch(() => ({ data: [] })),\r\n    ]).then(([single, multi]) => {\r\n      const list = Array.isArray(multi?.data) ? multi.data : [];\r\n      setCustomersList(list);\r\n      if (list.length > 0) {\r\n        const first = list[0];\r\n        setSelectedCustomerId(first.customer_id);\r\n        setSelectedAddressIdx(0);\r\n        setCustomer(first);\r\n        const addr = (first.primary_address || first.addresses?.[0] || {});\r\n        setOrderData({\r\n          name: first.name || \"\",\r\n          email: first.email || \"\",\r\n          phone: first.phone || activeUser.phone,\r\n          address: addr.address1 || \"\",\r\n          city: addr.city || \"\",\r\n          province: addr.province || \"\",\r\n          zip: addr.zip || \"\",\r\n          order_note: \"\",\r\n          order_image_url: \"\",\r\n          complete_now: false,\r\n        });\r\n        // Fetch orders list\r\n        api.get(`${API_BASE}/shopify-orders`, { params: { customer_id: first.customer_id, limit: 50 } })\r\n          .then(res => setOrders(Array.isArray(res.data) ? res.data : []))\r\n          .catch(() => setOrders([]));\r\n      } else if (single?.data) {\r\n        const c = single.data;\r\n        setCustomer(c);\r\n        setOrderData({\r\n          name: c.name || \"\",\r\n          email: c.email || \"\",\r\n          phone: c.phone || activeUser.phone,\r\n          address: c.address || \"\",\r\n          city: c.city || \"\",\r\n          province: c.province || \"\",\r\n          zip: c.zip || \"\",\r\n          order_note: \"\",\r\n          order_image_url: \"\",\r\n          complete_now: false,\r\n        });\r\n        if (c.customer_id) {\r\n          api.get(`${API_BASE}/shopify-orders`, { params: { customer_id: c.customer_id, limit: 50 } })\r\n            .then(res => setOrders(Array.isArray(res.data) ? res.data : []))\r\n            .catch(() => setOrders([]));\r\n        } else {\r\n          setOrders([]);\r\n        }\r\n      } else {\r\n        setCustomer(null);\r\n        setOrderData(prev => ({ ...prev, phone: activeUser.phone || \"\" }));\r\n        setOrders([]);\r\n      }\r\n    }).catch((err) => {\r\n      const detail = err?.response?.data?.detail || err?.message || \"\";\r\n      if (err?.response?.status === 403) {\r\n        setErrorMsg(\"Shopify permissions error: token lacks read_customers scope or app not installed.\");\r\n      } else if (detail) {\r\n        setErrorMsg(String(detail));\r\n      }\r\n    }).finally(() => setLoading(false));\r\n  }, [activeUser, API_BASE]);\r\n\r\n  // Product search with debounce\r\n  useEffect(() => {\r\n    if (!productSearch) {\r\n      setProducts([]);\r\n      return;\r\n    }\r\n    const timeoutId = setTimeout(async () => {\r\n      try {\r\n        const res = await api.get(`${API_BASE}/shopify-products?q=${encodeURIComponent(productSearch)}`);\r\n        setProducts(res.data || []);\r\n      } catch {\r\n        setProducts([]);\r\n      }\r\n    }, 500);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [productSearch, API_BASE]);\r\n\r\n  // Add product by variant id\r\n  const addByVariantId = async (variantId, quantity = 1) => {\r\n    if (!variantId) return;\r\n    try {\r\n      const res = await api.get(`${API_BASE}/shopify-variant/${variantId}`);\r\n      if (res.data) {\r\n        setSelectedItems(items => [\r\n          ...items,\r\n          { variant: res.data, quantity: Number(quantity) || 1, discount: 0 },\r\n        ]);\r\n      }\r\n    } catch {\r\n      setErrorMsg(\"Variant not found.\");\r\n    }\r\n  };\r\n\r\n  // ---- Build and send order label (PNG) from template ----\r\n  const computeTotalPrice = useMemo(() => {\r\n    return (items) => {\r\n      try {\r\n        const sum = (items || []).reduce((acc, it) => {\r\n          const price = Number(it?.variant?.price || 0);\r\n          const qty = Number(it?.quantity || 1);\r\n          const discount = Number(it?.discount || 0);\r\n          return acc + (price * qty) - discount;\r\n        }, 0);\r\n        return Math.max(0, Number(sum.toFixed(2)));\r\n      } catch {\r\n        return 0;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const buildOrderLabelHtml = ({\r\n    orderName,\r\n    createdAtDisplay,\r\n    isPaid,\r\n    paymentMethod,\r\n    subtotal,\r\n    totalDiscount,\r\n    total,\r\n    currency,\r\n    productImageUrl,\r\n    productTitle,\r\n    productVariantTitle,\r\n    qty,\r\n    moreCount,\r\n    addressName,\r\n    address1,\r\n    address2,\r\n    city,\r\n    provinceCode,\r\n    zip,\r\n  }) => {\r\n    return `<!DOCTYPE html>\r\n<html lang=\"ar\" dir=\"rtl\">\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  <title>فاتورة — ${orderName}</title>\r\n  <style>\r\n    :root{\r\n      --brand:#004AAD;             /* irrakids blue */\r\n      --accent:#6A7CFF;            /* secondary blue */\r\n      --ink:#e5e7eb;               /* text */\r\n      --muted:#9ca3af;             /* secondary text */\r\n      --card:#0f1722;              /* single-color card background */\r\n      --width: 320px;\r\n    }\r\n\r\n    *{box-sizing:border-box}\r\n    body{margin:0; padding:24px; background:transparent; font:14px/1.45 ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial; color:var(--ink)}\r\n\r\n    .wrap{display:flex; justify-content:center}\r\n\r\n    .ticket{width:var(--width); position:relative; border-radius:20px; overflow:hidden; \r\n            background:var(--card);\r\n    }\r\n\r\n    /* Remove scallops/notches for WhatsApp-native look */\r\n\r\n    .inner{padding:18px 18px 16px; position:relative}\r\n\r\n    .emblem{display:flex; align-items:center; justify-content:center; margin:8px 0 10px}\r\n    .halo{width:52px; height:52px; border-radius:999px; background:radial-gradient(closest-side, rgba(0,74,173,.35), rgba(0,74,173,.08) 60%, transparent 65%);\r\n          display:grid; place-items:center;}\r\n    .check{width:34px; height:34px; border-radius:999px; background:linear-gradient(180deg, #3f82ff, var(--brand)); box-shadow:0 6px 14px rgba(0,74,173,.45) inset, 0 2px 10px rgba(0,0,0,.25); display:grid; place-items:center}\r\n    .check svg{width:18px; height:18px; color:white}\r\n\r\n    h1{margin:6px 0 6px; text-align:center; font-size:18px; letter-spacing:.2px; font-weight:800}\r\n\r\n    .rule{height:1px; background:repeating-linear-gradient(90deg, rgba(255,255,255,.16) 0 7px, transparent 7px 14px); margin:10px 0}\r\n\r\n    .kv{display:flex; justify-content:space-between; gap:10px; padding:6px 0; align-items:center}\r\n    .kv .k{color:var(--muted)}\r\n    .kv .v{color:var(--ink); font-weight:700; text-align:left}\r\n\r\n    .summary{margin-top:4px}\r\n    .row{display:flex; justify-content:space-between; padding:6px 0}\r\n    .row.sub, .row.dis{color:var(--muted)}\r\n\r\n    .total{display:flex; justify-content:space-between; align-items:center; margin-top:10px; padding:10px 12px; border-radius:14px;\r\n           background:linear-gradient(145deg, rgba(255,255,255,.06), rgba(255,255,255,.04)); font-weight:900; font-size:16px;}\r\n\r\n    /* Product + Address blocks */\r\n    .section-title{font-weight:800; font-size:12px; letter-spacing:.6px; text-transform:uppercase; color:var(--accent); margin:6px 0 6px}\r\n\r\n    .product{display:flex; gap:10px; align-items:flex-start; padding:6px 0}\r\n    .thumb{width:60px; height:60px; border-radius:10px; overflow:hidden; flex:0 0 auto; box-shadow:0 4px 10px rgba(0,0,0,.25)}\r\n    .thumb img{width:100%; height:100%; object-fit:cover; display:block}\r\n    .prod-info{flex:1}\r\n    .prod-title{font-weight:700; font-size:13px}\r\n    .prod-variant{color:var(--muted); font-size:12px; margin-top:2px}\r\n    .chips{margin-top:6px; display:flex; gap:6px; flex-wrap:wrap}\r\n    .chip{font-size:11px; font-weight:800; color:#fff; background:linear-gradient(180deg, #6f85ff, var(--accent)); padding:2px 8px; border-radius:999px}\r\n\r\n    .address{padding:6px 0}\r\n    .addr-name{font-weight:700; font-size:13px}\r\n    .addr-lines{color:var(--muted); font-size:12px; line-height:1.35; margin-top:2px}\r\n\r\n    .foot{padding:10px 0 4px; text-align:center; color:var(--muted); font-size:11px}\r\n\r\n    .no-print{text-align:center; margin-top:10px}\r\n    .btn{padding:8px 12px; border-radius:10px; border:0; background:#1f6feb; color:#fff; font-weight:700; cursor:pointer}\r\n\r\n    @media print{\r\n      body{background:none; padding:0}\r\n      .ticket{box-shadow:none}\r\n      .no-print{display:none !important}\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"wrap\">\r\n    <div class=\"ticket\" role=\"document\" aria-label=\"Payment Ticket\">\r\n      <div class=\"inner\">\r\n        <div class=\"emblem\">\r\n          <div class=\"halo\">\r\n            <div class=\"check\" aria-hidden=\"true\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" aria-hidden=\"true\">\r\n                <path d=\"M20 6L9 17l-5-5\"/>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h1>\r\n          ${isPaid ? \"تم الدفع بنجاح\" : \"تم إنشاء الطلب\"}\r\n        </h1>\r\n\r\n        <div class=\"rule\" aria-hidden=\"true\"></div>\r\n\r\n        <!-- Product (first item) -->\r\n        <div class=\"section-title\">المنتج</div>\r\n        <div class=\"product\">\r\n          <div class=\"thumb\">\r\n            ${productImageUrl ? `<img src=\"${productImageUrl}\" crossorigin=\"anonymous\" alt=\"${productTitle || 'Item'}\" />` : `<img src=\"https://cdn.shopify.com/s/images/admin/no-image-compact-1.gif\" alt=\"No image\" />`}\r\n          </div>\r\n          <div class=\"prod-info\">\r\n            <div class=\"prod-title\">${productTitle || ''}</div>\r\n            ${productVariantTitle ? `<div class=\"prod-variant\">${productVariantTitle}</div>` : ''}\r\n            <div class=\"chips\">\r\n              <span class=\"chip\">الكمية ×${qty}</span>\r\n              ${moreCount > 0 ? `<span class=\"chip\">+${moreCount} إضافي</span>` : ''}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Address -->\r\n        <div class=\"section-title\">العميل</div>\r\n        <div class=\"address\">\r\n          <div class=\"addr-name\">${addressName}</div>\r\n          <div class=\"addr-lines\">\r\n            ${address1 || ''}${address2 ? `, ${address2}` : ''}<br/>\r\n            ${city || ''}${provinceCode ? `, ${provinceCode}` : ''}${zip ? ` ${zip}` : ''}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"rule\" aria-hidden=\"true\"></div>\r\n\r\n        <div class=\"kv\"><span class=\"k\">رقم المرجع</span><span class=\"v\">${orderName}</span></div>\r\n        <div class=\"kv\"><span class=\"k\">التاريخ والوقت</span><span class=\"v\">${createdAtDisplay}</span></div>\r\n        <div class=\"kv\"><span class=\"k\">طريقة الدفع</span>\r\n          <span class=\"v\">${paymentMethod}</span>\r\n        </div>\r\n\r\n        <div class=\"rule\" aria-hidden=\"true\"></div>\r\n\r\n        <div class=\"rule\" aria-hidden=\"true\"></div>\r\n\r\n        <div class=\"summary\">\r\n          <div class=\"row sub\"><span>المجموع الفرعي</span><span>${subtotal} ${currency}</span></div>\r\n          ${totalDiscount > 0 ? `<div class=\"row dis\"><span>الخصم</span><span>-${totalDiscount} ${currency}</span></div>` : ''}\r\n          ${totalDiscount > 0 ? `<div class=\"rule\" aria-hidden=\"true\"></div>` : ''}\r\n          <div class=\"total\"><span>الإجمالي</span><span style=\"font-size:18px\">${total} ${currency}</span></div>\r\n        </div>\r\n\r\n        <div class=\"foot\">شكرًا لتسوقك معنا</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"no-print\"><button class=\"btn\" onclick=\"window.print()\">Print</button></div>\r\n</body>\r\n</html>`;\r\n  };\r\n\r\n  const generateAndSendOrderLabel = async (creationResult) => {\r\n    try {\r\n      if (!activeUser?.user_id) return;\r\n\r\n      const fullName = (orderData?.name || \"\").trim();\r\n      const [first = \"\", last = \"\"] = fullName.split(\" \", 2);\r\n      const itemsCount = (selectedItems || []).length;\r\n      const subtotal = (selectedItems || []).reduce((acc, it) => {\r\n        const price = Number(it?.variant?.price || 0);\r\n        const qty = Number(it?.quantity || 1);\r\n        return acc + price * qty;\r\n      }, 0);\r\n      const totalDiscount = (selectedItems || []).reduce((acc, it) => acc + Number(it?.discount || 0), 0);\r\n      const total = Math.max(0, Number((subtotal - totalDiscount).toFixed(2)));\r\n\r\n      const createdAtDate = new Date();\r\n      const months = [\r\n        \"يناير\",\"فبراير\",\"مارس\",\"أبريل\",\"مايو\",\"يونيو\",\r\n        \"يوليوز\",\"غشت\",\"شتنبر\",\"أكتوبر\",\"نوفمبر\",\"دجنبر\"\r\n      ];\r\n      const dd = String(createdAtDate.getDate()).padStart(2, '0');\r\n      const mmm = months[createdAtDate.getMonth()];\r\n      let hh = createdAtDate.getHours();\r\n      const mm = String(createdAtDate.getMinutes()).padStart(2, '0');\r\n      const ampm = hh >= 12 ? 'م' : 'ص';\r\n      hh = hh % 12; if (hh === 0) hh = 12;\r\n      const createdAtDisplay = `${dd} ${mmm} ${createdAtDate.getFullYear()}، ${String(hh).padStart(2,'0')}:${mm} ${ampm}`;\r\n\r\n      const isCOD = (paymentTerm || \"\").toLowerCase().includes(\"receipt\") || (deliveryOption || \"\").toLowerCase().includes(\"cod\");\r\n      const isPaid = (paymentTerm || \"\").toLowerCase() === \"paid\";\r\n      const paymentMethod = isCOD ? \"الدفع عند التسليم\" : (isPaid ? \"بطاقة/محفظة\" : \"—\");\r\n\r\n      const orderName =\r\n        (creationResult?.order_admin_link ? creationResult.order_admin_link.split(\"/\").pop() : \"\") ||\r\n        (creationResult?.draft_order_id ? `Draft #${creationResult.draft_order_id}` : `Order ${new Date().toISOString().slice(0,10)}`);\r\n\r\n      const firstItem = (selectedItems || [])[0] || null;\r\n      const productImageUrl = firstItem?.variant?.image_src || \"\";\r\n      const productTitle = firstItem?.variant?.product_title || firstItem?.variant?.title || \"\";\r\n      const productVariantTitle = firstItem?.variant?.title || \"\";\r\n      const qty = Number(firstItem?.quantity || 0);\r\n      const moreCount = Math.max(0, itemsCount - 1);\r\n\r\n      const html = buildOrderLabelHtml({\r\n        orderName,\r\n        createdAtDisplay,\r\n        isPaid,\r\n        paymentMethod,\r\n        subtotal: Number(subtotal.toFixed(2)),\r\n        totalDiscount: Number(totalDiscount.toFixed(2)),\r\n        total,\r\n        currency: \"MAD\",\r\n        productImageUrl,\r\n        productTitle,\r\n        productVariantTitle,\r\n        qty,\r\n        moreCount,\r\n        addressName: fullName || \"\",\r\n        address1: orderData?.address || \"\",\r\n        address2: \"\",\r\n        city: orderData?.city || \"\",\r\n        provinceCode: orderData?.province || \"\",\r\n        zip: orderData?.zip || \"\",\r\n      });\r\n\r\n      const container = document.createElement(\"div\");\r\n      container.style.position = \"fixed\";\r\n      container.style.left = \"-10000px\";\r\n      container.style.top = \"0\";\r\n      container.style.zIndex = \"-1\";\r\n      container.innerHTML = html;\r\n      document.body.appendChild(container);\r\n\r\n      const ticketEl = container.querySelector(\".ticket\") || container;\r\n      const canvas = await html2canvas(ticketEl, { scale: 2, backgroundColor: null, useCORS: true });\r\n\r\n      const blob = await new Promise((resolve) => canvas.toBlob(resolve, \"image/png\", 1));\r\n      if (!blob) {\r\n        document.body.removeChild(container);\r\n        return;\r\n      }\r\n      const file = new File([blob], `order_label_${Date.now()}.png`, { type: \"image/png\" });\r\n\r\n      const fd = new FormData();\r\n      fd.append(\"user_id\", activeUser.user_id);\r\n      fd.append(\"media_type\", \"image\");\r\n      fd.append(\"files\", file, file.name);\r\n      const arabicCaption = [\r\n        `هذه فاتورتك \\uD83D\\uDCC4`,\r\n        `تم تأكيد طلبك: ${orderName}`,\r\n        `يرجى مراجعة الفاتورة بعناية: عنوانك ورقم هاتفك والمنتجات والمقاس واللون حتى يصلك طلبك بسرعة وبدون أي مشاكل.`,\r\n        `شكراً لتسوقك معنا \\u2764\\uFE0F`\r\n      ].join(\"\\n\");\r\n      fd.append(\"caption\", arabicCaption);\r\n\r\n      await api.post(`${API_BASE}/send-media`, fd, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      document.body.removeChild(container);\r\n    } catch {\r\n      // best-effort, do not block order creation UX\r\n    }\r\n  };\r\n\r\n  const handleAddByVariantId = async () => {\r\n    if (!variantIdInput) return;\r\n    await addByVariantId(variantIdInput, 1);\r\n    setVariantIdInput(\"\");\r\n  };\r\n\r\n  const handleAddVariant = variant => {\r\n    setSelectedItems(items => [...items, { variant, quantity: 1, discount: 0 }]);\r\n  };\r\n\r\n  // Update line item\r\n  const handleItemChange = (idx, field, value) => {\r\n    setSelectedItems(items =>\r\n      items.map((item, i) => i === idx ? { ...item, [field]: value } : item)\r\n    );\r\n  };\r\n\r\n  // Remove line item\r\n  const removeOrderItem = idx => {\r\n    setSelectedItems(items => items.filter((_, i) => i !== idx));\r\n  };\r\n\r\n  // Listen for \"add-to-order\" events dispatched from message bubbles\r\n  useEffect(() => {\r\n    const handler = (e) => {\r\n      const detail = e?.detail || {};\r\n      const variantId = detail.variantId || detail.productId || detail.id;\r\n      const quantity = detail.quantity || 1;\r\n      if (variantId) {\r\n        addByVariantId(String(variantId), Number(quantity) || 1);\r\n      }\r\n    };\r\n    window.addEventListener(\"add-to-order\", handler);\r\n    return () => window.removeEventListener(\"add-to-order\", handler);\r\n  }, [addByVariantId]);\r\n\r\n  // Load saved cart for this conversation (2-hour TTL enforced in storage)\r\n  useEffect(() => {\r\n    if (!activeUser?.user_id) return;\r\n    let mounted = true;\r\n    loadCart(activeUser.user_id).then(items => {\r\n      if (!mounted) return;\r\n      setSelectedItems(Array.isArray(items) ? items : []);\r\n    }).catch(() => setSelectedItems([]));\r\n    return () => { mounted = false; };\r\n  }, [activeUser?.user_id]);\r\n\r\n  // Persist cart on every change\r\n  useEffect(() => {\r\n    if (!activeUser?.user_id) return;\r\n    saveCart(activeUser.user_id, selectedItems).catch(() => {});\r\n  }, [selectedItems, activeUser?.user_id]);\r\n\r\n  const handleCreateOrder = async () => {\r\n    setErrorMsg(\"\");\r\n    setLastResult(null);\r\n    if (\r\n      !orderData.address?.trim() ||\r\n      !orderData.city?.trim() ||\r\n      !orderData.province?.trim() ||\r\n      !orderData.zip?.trim()\r\n    ) {\r\n      setErrorMsg(\"Please fill all shipping address fields (address, city, province, zip)!\");\r\n      return;\r\n    }\r\n    if (!selectedItems.length) {\r\n      setErrorMsg(\"Please select at least one product/variant.\");\r\n      return;\r\n    }\r\n    const safePhone = normalizePhone(orderData.phone);\r\n    const orderPayload = {\r\n      ...orderData,\r\n      phone: safePhone,\r\n      items: selectedItems.map(item => ({\r\n        variant_id: item.variant.id,\r\n        title: item.variant.title,\r\n        quantity: Number(item.quantity) || 1,\r\n        discount: Number(item.discount) || 0,\r\n      })),\r\n      delivery: deliveryOption,\r\n      payment_term: paymentTerm,\r\n      ...(customer?.customer_id ? { customer_id: customer.customer_id } : {}),\r\n      create_customer_if_missing: !!createCustomerIfMissing,\r\n      market,\r\n    };\r\n\r\n    setIsCreating(true);\r\n    try {\r\n      const res = await api.post(`${API_BASE}/create-shopify-order`, orderPayload);\r\n      setSelectedItems([]);\r\n      try { if (activeUser?.user_id) await saveCart(activeUser.user_id, []); } catch {}\r\n      setErrorMsg(\"\");\r\n      setLastResult(res?.data || null);\r\n      alert(\"Order created successfully!\");\r\n      // Generate the label and send it as image to the customer (best-effort)\r\n      await generateAndSendOrderLabel(res?.data);\r\n    } catch (e) {\r\n      setErrorMsg(\"Error creating order.\");\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  // Handle customer input changes\r\n  const handleOrderDataChange = (field, value) => {\r\n    setOrderData(data => ({ ...data, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 h-full flex flex-col\">\r\n      {/* Contact Info COLLAPSIBLE */}\r\n      <div className=\"mb-2\">\r\n        <button\r\n          className=\"w-full flex justify-between items-center bg-gray-800 px-4 py-2 rounded-t text-lg font-bold\"\r\n          onClick={() => setShowInfo(v => !v)}\r\n        >\r\n          <span className=\"flex items-center\"><FaShopify className=\"mr-2 text-green-400\" />Contact Information</span>\r\n          <span>{showInfo ? \"▲\" : \"▼\"}</span>\r\n        </button>\r\n        {showInfo && (\r\n          <div className=\"bg-gray-700 p-4 space-y-2 rounded-b shadow-inner\">\r\n            {!activeUser?.phone && (\r\n              <p>Select a conversation with a user to fetch Shopify customer info by phone.</p>\r\n            )}\r\n            {activeUser?.phone && loading && (\r\n              <div className=\"space-y-2\" aria-live=\"polite\">\r\n                <div className=\"h-4 bg-gray-600 rounded animate-pulse\" />\r\n                <div className=\"h-4 bg-gray-600 rounded animate-pulse w-2/3\" />\r\n                <div className=\"h-4 bg-gray-600 rounded animate-pulse w-1/2\" />\r\n              </div>\r\n            )}\r\n            {activeUser?.phone && !loading && (customer || customersList.length > 0) && (\r\n              <>\r\n                {customersList.length > 0 ? (\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"text-sm text-gray-300\">Select customer for this phone:</div>\r\n                    <select\r\n                      className=\"w-full bg-gray-800 text-white p-2 rounded\"\r\n                      value={selectedCustomerId || ''}\r\n                      onChange={(e) => {\r\n                        const id = e.target.value;\r\n                        const c = customersList.find(x => String(x.customer_id) === String(id));\r\n                        if (!c) return;\r\n                        setSelectedCustomerId(c.customer_id);\r\n                        setSelectedAddressIdx(0);\r\n                        setCustomer(c);\r\n                        const addr = (c.primary_address || c.addresses?.[0] || {});\r\n                        setOrderData(d => ({\r\n                          ...d,\r\n                          name: c.name || \"\",\r\n                          email: c.email || \"\",\r\n                          phone: c.phone || activeUser.phone,\r\n                          address: addr.address1 || \"\",\r\n                          city: addr.city || \"\",\r\n                          province: addr.province || \"\",\r\n                          zip: addr.zip || \"\",\r\n                        }));\r\n                        api.get(`${API_BASE}/shopify-orders`, { params: { customer_id: c.customer_id, limit: 50 } })\r\n                          .then(res => setOrders(Array.isArray(res.data) ? res.data : []))\r\n                          .catch(() => setOrders([]));\r\n                      }}\r\n                    >\r\n                      {customersList.map((c) => (\r\n                        <option key={c.customer_id} value={c.customer_id}>\r\n                          {(c.name || '(no name)')} • {(c.phone || '')}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {Array.isArray(customer?.addresses) && customer.addresses.length > 0 && (\r\n                      <details>\r\n                        <summary className=\"cursor-pointer text-xs text-gray-300\">Addresses ({customer.addresses.length})</summary>\r\n                        <div className=\"mt-1\">\r\n                          <div className=\"text-xs mb-1\">Select address:</div>\r\n                          <select\r\n                            className=\"bg-gray-800 text-white p-1 rounded\"\r\n                            value={selectedAddressIdx}\r\n                            onChange={(e) => {\r\n                              const idx = Number(e.target.value) || 0;\r\n                              setSelectedAddressIdx(idx);\r\n                              const addr = customer.addresses[idx] || {};\r\n                              setOrderData(d => ({\r\n                                ...d,\r\n                                address: addr.address1 || \"\",\r\n                                city: addr.city || \"\",\r\n                                province: addr.province || \"\",\r\n                                zip: addr.zip || \"\",\r\n                              }));\r\n                            }}\r\n                          >\r\n                            {customer.addresses.map((a, idx) => (\r\n                              <option key={idx} value={idx}>{a.address1 || ''} {a.city ? `, ${a.city}`: ''}</option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                      </details>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <p><strong>Name:</strong> {customer.name}</p>\r\n                    <p><strong>Email:</strong> {customer.email}</p>\r\n                    <p><strong>Phone:</strong> {customer.phone}</p>\r\n                    {Array.isArray(customer.addresses) && customer.addresses.length > 0 ? (\r\n                      <details>\r\n                        <summary className=\"cursor-pointer\">Addresses ({customer.addresses.length})</summary>\r\n                        <div className=\"ml-4 mt-1\">\r\n                          <div className=\"text-xs mb-1\">Select address:</div>\r\n                          <select\r\n                            className=\"bg-gray-800 text-white p-1 rounded\"\r\n                            value={selectedAddressIdx}\r\n                            onChange={(e) => {\r\n                              const idx = Number(e.target.value) || 0;\r\n                              setSelectedAddressIdx(idx);\r\n                              const addr = customer.addresses[idx] || {};\r\n                              setOrderData(d => ({\r\n                                ...d,\r\n                                address: addr.address1 || \"\",\r\n                                city: addr.city || \"\",\r\n                                province: addr.province || \"\",\r\n                                zip: addr.zip || \"\",\r\n                              }));\r\n                            }}\r\n                          >\r\n                            {customer.addresses.map((a, idx) => (\r\n                              <option key={idx} value={idx}>{a.address1 || ''} {a.city ? `, ${a.city}`: ''}</option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                      </details>\r\n                    ) : (\r\n                      <p><strong>Address:</strong> {customer.address}</p>\r\n                    )}\r\n                  </>\r\n                )}\r\n                <hr className=\"my-2\" />\r\n                <p><strong>Total Orders:</strong> {(customer || customersList[0])?.total_orders}</p>\r\n                {/* Orders list */}\r\n                {Array.isArray(orders) && orders.length > 0 && (\r\n                  <div className=\"mt-2\">\r\n                    <div className=\"font-semibold mb-1\">Orders</div>\r\n                    <ul className=\"space-y-1 max-h-40 overflow-auto pr-1\">\r\n                      {orders.map((o) => (\r\n                        <li key={o.id} className=\"text-sm flex justify-between gap-2 border-b border-gray-600 py-1\">\r\n                          <div className=\"min-w-0\">\r\n                            <a\r\n                              href={o.admin_url}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              className=\"text-blue-300 hover:underline truncate inline-block\"\r\n                              title=\"Open in Shopify admin\"\r\n                            >\r\n                              {o.order_number}\r\n                            </a>\r\n                            <div className=\"text-xs text-gray-300\">\r\n                              {new Date(o.created_at).toLocaleString()} • {o.financial_status || 'unpaid'}{o.fulfillment_status ? ` • ${o.fulfillment_status}` : ''}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right text-sm whitespace-nowrap\">\r\n                            {o.total_price} {o.currency || ''}\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n                {/* Copy address to clipboard for quick reply */}\r\n                {customer.address && (\r\n                  <button\r\n                    className=\"mt-2 bg-blue-500 hover:bg-blue-700 text-white text-xs px-2 py-1 rounded\"\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(customer.address + (customer.city ? `, ${customer.city}` : \"\"));\r\n                      alert(\"Address copied to clipboard!\");\r\n                    }}\r\n                  >\r\n                    Copy address\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n            {activeUser?.phone && !loading && !customer && (\r\n              <>\r\n                {errorMsg ? (\r\n                  <p className=\"text-yellow-300\">{errorMsg}</p>\r\n                ) : (\r\n                  <p className=\"text-red-400\">No customer found.</p>\r\n                )}\r\n                {/* Search bar for other numbers/emails */}\r\n                <div className=\"mt-2 p-2 bg-gray-800 rounded\">\r\n                  <div className=\"text-xs text-gray-300 mb-1\">Search customers by phone or email (different from WhatsApp):</div>\r\n                  <div className=\"flex gap-2\">\r\n                    <input\r\n                      className=\"flex-1 p-1 rounded bg-gray-900 text-white\"\r\n                      placeholder=\"Enter phone or email\"\r\n                      value={customerSearchInput}\r\n                      onChange={e => setCustomerSearchInput(e.target.value)}\r\n                    />\r\n                    <button\r\n                      className=\"px-2 py-1 bg-blue-600 rounded text-white\"\r\n                      onClick={async () => {\r\n                        if (!customerSearchInput.trim()) return;\r\n                        setIsSearchingCustomers(true);\r\n                        setCustomerSearchResults([]);\r\n                        try {\r\n                          const res = await api.get(`${API_BASE}/search-customers-all?phone_number=${encodeURIComponent(customerSearchInput.trim())}`);\r\n                          const list = Array.isArray(res.data) ? res.data : [];\r\n                          setCustomerSearchResults(list);\r\n                        } catch {\r\n                          setCustomerSearchResults([]);\r\n                        } finally {\r\n                          setIsSearchingCustomers(false);\r\n                        }\r\n                      }}\r\n                      type=\"button\"\r\n                    >Search</button>\r\n                  </div>\r\n                  {isSearchingCustomers && <div className=\"text-xs text-gray-400 mt-1\">Searching…</div>}\r\n                  {customerSearchResults.length > 0 && (\r\n                    <ul className=\"mt-2 space-y-1 max-h-40 overflow-auto pr-1\">\r\n                      {customerSearchResults.map((c) => (\r\n                        <li key={c.customer_id} className=\"flex justify-between items-center gap-2 bg-gray-900 p-2 rounded\">\r\n                          <div className=\"min-w-0\">\r\n                            <div className=\"font-semibold text-sm truncate\">{c.name || \"(no name)\"}</div>\r\n                            <div className=\"text-xs text-gray-300 truncate\">{c.phone || c.email || \"\"}</div>\r\n                          </div>\r\n                          <button\r\n                            className=\"px-2 py-1 bg-green-600 rounded text-white text-xs whitespace-nowrap\"\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              setCustomer(c);\r\n                              setSelectedCustomerId(c.customer_id);\r\n                              setSelectedAddressIdx(0);\r\n                              const addr = (c.primary_address || c.addresses?.[0] || {});\r\n                              setOrderData(d => ({\r\n                                ...d,\r\n                                name: c.name || \"\",\r\n                                email: c.email || \"\",\r\n                                phone: c.phone || orderData.phone,\r\n                                address: addr.address1 || \"\",\r\n                                city: addr.city || \"\",\r\n                                province: addr.province || \"\",\r\n                                zip: addr.zip || \"\",\r\n                              }));\r\n                              setCustomerSearchResults([]);\r\n                              setCustomerSearchInput(\"\");\r\n                              api.get(`${API_BASE}/shopify-orders`, { params: { customer_id: c.customer_id, limit: 50 } })\r\n                                .then(res => setOrders(Array.isArray(res.data) ? res.data : []))\r\n                                .catch(() => setOrders([]));\r\n                            }}\r\n                          >Select</button>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* CREATE ORDER COLLAPSIBLE */}\r\n      <div>\r\n        <button\r\n          className=\"w-full flex justify-between items-center bg-gray-800 px-4 py-2 rounded-t text-lg font-bold\"\r\n          onClick={() => setShowCreate(v => !v)}\r\n        >\r\n          <span>Create an Order</span>\r\n          <span>{showCreate ? \"▲\" : \"▼\"}</span>\r\n        </button>\r\n        {showCreate && (\r\n          <form\r\n            className=\"bg-gray-700 p-4 rounded-b shadow-inner space-y-2\"\r\n            onSubmit={e => { e.preventDefault(); handleCreateOrder(); }}\r\n            autoComplete=\"off\"\r\n          >\r\n            {/* Error message */}\r\n            {errorMsg && (\r\n              <div className=\"bg-red-500 text-white px-2 py-1 rounded mb-2\">{errorMsg}</div>\r\n            )}\r\n            <div className=\"space-y-1\">\r\n              {/* ... All your address and customer fields, as in your code ... */}\r\n              <label className=\"block text-xs font-bold\">Name</label>\r\n              <input\r\n                className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                value={orderData.name}\r\n                onChange={e => handleOrderDataChange('name', e.target.value)}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Customer name\"\r\n                title=\"Customer full name\"\r\n              />\r\n              <label className=\"block text-xs font-bold\">Email</label>\r\n              <input\r\n                className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                value={orderData.email}\r\n                onChange={e => handleOrderDataChange('email', e.target.value)}\r\n                autoComplete=\"off\"\r\n                placeholder=\"customer@example.com\"\r\n                title=\"Customer email (optional)\"\r\n              />\r\n              <label className=\"block text-xs font-bold\">Phone</label>\r\n              <input\r\n                className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                value={orderData.phone}\r\n                onChange={e => handleOrderDataChange('phone', e.target.value)}\r\n                autoComplete=\"off\"\r\n                placeholder=\"+212...\"\r\n                title=\"Customer phone number\"\r\n              />\r\n              <label className=\"block text-xs font-bold\">City <span className=\"text-red-400\">*</span></label>\r\n              <input\r\n                className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                value={orderData.city}\r\n                onChange={e => handleOrderDataChange('city', e.target.value)}\r\n                autoComplete=\"off\"\r\n                required\r\n                placeholder=\"City\"\r\n                title=\"Shipping city\"\r\n              />\r\n              <label className=\"block text-xs font-bold\">Province <span className=\"text-red-400\">*</span></label>\r\n              <select\r\n                className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                value={orderData.province}\r\n                onChange={e => handleOrderDataChange('province', e.target.value)}\r\n                required\r\n                title=\"Province/Region\"\r\n              >\r\n                <option value=\"\" disabled>Select province</option>\r\n                 {MOROCCO_PROVINCES.map((prov) => (\r\n                   <option key={prov} value={prov}>{prov}</option>\r\n                 ))}\r\n               </select>\r\n              <label className=\"block text-xs font-bold\">ZIP <span className=\"text-red-400\">*</span></label>\r\n              <input\r\n                className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                value={orderData.zip}\r\n                onChange={e => handleOrderDataChange('zip', e.target.value)}\r\n                autoComplete=\"off\"\r\n                required\r\n                placeholder=\"Postal code\"\r\n                title=\"Postal/ZIP code\"\r\n              />\r\n              <label className=\"block text-xs font-bold\">Address <span className=\"text-red-400\">*</span></label>\r\n              <input\r\n                className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                value={orderData.address}\r\n                onChange={e => handleOrderDataChange('address', e.target.value)}\r\n                autoComplete=\"off\"\r\n                required\r\n                placeholder=\"Street address\"\r\n                title=\"Shipping street address\"\r\n              />\r\n              {/* Optional note and image URL (collapsed by default) */}\r\n              <details className=\"mt-2\">\r\n                <summary className=\"cursor-pointer text-xs text-gray-300\">Additional details</summary>\r\n                <div className=\"mt-2 space-y-1\">\r\n                  <label className=\"block text-xs font-bold\">Order note (timeline text)</label>\r\n                  <textarea\r\n                    className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                    rows={3}\r\n                    placeholder=\"e.g. Customer requested gift wrap.\"\r\n                    value={orderData.order_note}\r\n                    onChange={e => handleOrderDataChange('order_note', e.target.value)}\r\n                  />\r\n                  <label className=\"block text-xs font-bold\">Image URL (will be saved in note)</label>\r\n                  <input\r\n                    className=\"w-full p-1 rounded bg-gray-800 text-white\"\r\n                    placeholder=\"https://...\"\r\n                    value={orderData.order_image_url}\r\n                    onChange={e => handleOrderDataChange('order_image_url', e.target.value)}\r\n                    autoComplete=\"off\"\r\n                    title=\"Optional image URL for order note\"\r\n                  />\r\n                  {orderData.order_image_url && (\r\n                    <div className=\"mt-2\">\r\n                      <div className=\"text-xs text-gray-300 mb-1\">Preview:</div>\r\n                      <img\r\n                        src={orderData.order_image_url}\r\n                        alt=\"Order reference\"\r\n                        className=\"w-24 h-24 object-cover rounded border border-gray-600 bg-gray-900\"\r\n                        onError={(e) => { e.currentTarget.style.display = 'none'; }}\r\n                        loading=\"lazy\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </details>\r\n            </div>\r\n            {/* Product search and add section */}\r\n            <hr className=\"my-2\" />\r\n            <h3 className=\"font-bold text-lg mb-2\">Add products</h3>\r\n            <input\r\n              value={productSearch}\r\n              onChange={e => setProductSearch(e.target.value)}\r\n              placeholder=\"Search products…\"\r\n              className=\"p-1 rounded bg-gray-800 text-white w-full\"\r\n            />\r\n            {products.map((product) => (\r\n              <div key={product.id}>\r\n                <strong>{product.title}</strong>\r\n                <div>\r\n                  {product.variants.map((variant) => (\r\n                    <button\r\n                      type=\"button\"\r\n                      key={variant.id}\r\n                      className=\"border p-1 m-1 rounded\"\r\n                      onClick={() => handleAddVariant(variant)}\r\n                    >\r\n                      {variant.title} • {variant.price} MAD\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div className=\"mt-2\">\r\n              <input\r\n                value={variantIdInput}\r\n                onChange={e => setVariantIdInput(e.target.value)}\r\n                placeholder=\"Add by Variant ID\"\r\n                className=\"p-1 rounded bg-gray-800 text-white\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"bg-blue-600 text-white rounded px-2 py-1 ml-2\"\r\n                onClick={handleAddByVariantId}\r\n              >\r\n                Add Variant\r\n              </button>\r\n            </div>\r\n            {/* Selected items table with images and pricing */}\r\n            <table className=\"w-full text-xs mt-2\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-left\">Item</th>\r\n                  <th>Variant</th>\r\n                  <th>Price</th>\r\n                  <th>Qty</th>\r\n                  <th>Discount</th>\r\n                  <th>Subtotal</th>\r\n                  <th>Remove</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {selectedItems.map((item, idx) => {\r\n                  const img = item.variant.image_src;\r\n                  const priceNum = Number(item.variant.price || 0);\r\n                  const qtyNum = Number(item.quantity || 1);\r\n                  const discountNum = Number(item.discount || 0);\r\n                  const subtotal = Math.max(0, priceNum * qtyNum - discountNum);\r\n                  return (\r\n                  <tr key={item.variant.id} className=\"align-middle\">\r\n                    <td>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {img ? (\r\n                          <img src={img} alt={item.variant.title} className=\"w-10 h-10 object-cover rounded\" />\r\n                        ) : (\r\n                          <div className=\"w-10 h-10 rounded bg-gray-600 flex items-center justify-center\">🛒</div>\r\n                        )}\r\n                        <div className=\"min-w-0\">\r\n                          <div className=\"font-semibold truncate max-w-[140px]\">{item.variant.product_title || \"--\"}</div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>{item.variant.title}</td>\r\n                    <td className=\"text-center\">{priceNum} MAD</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        value={item.quantity}\r\n                        onChange={e => handleItemChange(idx, \"quantity\", Number(e.target.value))}\r\n                        className=\"w-12 bg-gray-800 text-white p-1\"\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        value={item.discount}\r\n                        onChange={e => handleItemChange(idx, \"discount\", Number(e.target.value))}\r\n                        className=\"w-12 bg-gray-800 text-white p-1\"\r\n                        placeholder=\"MAD\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"text-center font-semibold\">{subtotal} MAD</td>\r\n                    <td>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"text-red-400\"\r\n                        onClick={() => removeOrderItem(idx)}\r\n                      >✖</button>\r\n                    </td>\r\n                  </tr>\r\n                );})}\r\n              </tbody>\r\n            </table>\r\n            {selectedItems.length > 0 && (\r\n              <div className=\"mt-2 text-right font-bold text-sm\">\r\n                {(() => {\r\n                  const total = selectedItems.reduce((sum, item) => {\r\n                    const p = Number(item.variant.price || 0);\r\n                    const q = Number(item.quantity || 1);\r\n                    const d = Number(item.discount || 0);\r\n                    return sum + Math.max(0, p * q - d);\r\n                  }, 0);\r\n                  return <span>Total: {total} MAD</span>;\r\n                })()}\r\n              </div>\r\n            )}\r\n            {/* Delivery Option */}\r\n            <div className=\"mt-2\">\r\n              <label className=\"block font-bold text-xs mb-1\">Delivery</label>\r\n              <select\r\n                className=\"bg-gray-800 text-white px-2 py-1 rounded\"\r\n                value={deliveryOption}\r\n                onChange={e => setDeliveryOption(e.target.value)}\r\n              >\r\n                {shippingOptions.map(opt =>\r\n                  <option key={opt.id} value={opt.name}>\r\n                    {opt.name} {opt.zone ? `(${opt.zone})` : \"\"}\r\n                  </option>\r\n                )}\r\n              </select>\r\n            </div>\r\n            {/* Payment Term */}\r\n            <div className=\"mt-2 flex items-center\">\r\n              <input\r\n                id=\"paymentDueLater\"\r\n                type=\"checkbox\"\r\n                checked={paymentTerm === \"due_on_receipt\"}\r\n                onChange={e => setPaymentTerm(e.target.checked ? \"due_on_receipt\" : \"paid\")}\r\n                className=\"mr-2\"\r\n              />\r\n              <label htmlFor=\"paymentDueLater\" className=\"font-bold text-xs\">\r\n                Payment due later\r\n              </label>\r\n            </div>\r\n            {/* Complete Now */}\r\n            <div className=\"mt-2 flex items-center\">\r\n              <input\r\n                id=\"completeNow\"\r\n                type=\"checkbox\"\r\n                checked={orderData.complete_now}\r\n                onChange={e => handleOrderDataChange('complete_now', e.target.checked)}\r\n                className=\"mr-2\"\r\n              />\r\n              <label htmlFor=\"completeNow\" className=\"font-bold text-xs\">\r\n                Complete draft now (creates order as payment pending)\r\n              </label>\r\n            </div>\r\n            {/* Create customer if missing */}\r\n            <div className=\"mt-2 flex items-center\">\r\n              <input\r\n                id=\"createCustomerIfMissing\"\r\n                type=\"checkbox\"\r\n                checked={createCustomerIfMissing}\r\n                onChange={e => setCreateCustomerIfMissing(e.target.checked)}\r\n                className=\"mr-2\"\r\n              />\r\n              <label htmlFor=\"createCustomerIfMissing\" className=\"font-bold text-xs\">\r\n                Create Shopify customer if none found\r\n              </label>\r\n            </div>\r\n            {/* Market */}\r\n            <div className=\"mt-2 text-xs text-gray-400\">\r\n              <span>Market: Moroccan default (auto)</span>\r\n            </div>\r\n            <button\r\n              className={`w-full px-4 py-2 rounded mt-4 font-bold ${\r\n                isCreating ? \"bg-gray-400\" : \"bg-green-600\"\r\n              }`}\r\n              type=\"submit\"\r\n              disabled={isCreating}\r\n            >\r\n              {isCreating ? \"Creating...\" : \"Create Shopify Order\"}\r\n            </button>\r\n\r\n            {lastResult && (\r\n              <div className=\"mt-3 text-xs bg-gray-800 p-2 rounded\">\r\n                <div className=\"font-bold\">Result</div>\r\n                {lastResult.shopify_admin_link && (\r\n                  <div>\r\n                    Draft: <a className=\"text-blue-300 underline\" href={lastResult.shopify_admin_link} target=\"_blank\" rel=\"noreferrer\">Open draft</a>\r\n                  </div>\r\n                )}\r\n                {lastResult.order_admin_link && (\r\n                  <div>\r\n                    Order: <a className=\"text-blue-300 underline\" href={lastResult.order_admin_link} target=\"_blank\" rel=\"noreferrer\">Open order</a>\r\n                  </div>\r\n                )}\r\n                {lastResult.message && (\r\n                  <div className=\"text-gray-300 mt-1\">{lastResult.message}</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ShopifyIntegrationsPanel","_ref","_ref4","activeUser","API_BASE","process","REACT_APP_API_BASE","customer","setCustomer","useState","customersList","setCustomersList","selectedCustomerId","setSelectedCustomerId","selectedAddressIdx","setSelectedAddressIdx","loading","setLoading","orders","setOrders","showInfo","setShowInfo","showCreate","setShowCreate","orderData","setOrderData","name","email","phone","address","city","province","zip","order_note","order_image_url","complete_now","productSearch","setProductSearch","products","setProducts","variantIdInput","setVariantIdInput","selectedItems","setSelectedItems","shippingOptions","setShippingOptions","deliveryOption","setDeliveryOption","paymentTerm","setPaymentTerm","market","isCreating","setIsCreating","errorMsg","setErrorMsg","lastResult","setLastResult","customerSearchInput","setCustomerSearchInput","customerSearchResults","setCustomerSearchResults","isSearchingCustomers","setIsSearchingCustomers","createCustomerIfMissing","setCreateCustomerIfMissing","useEffect","api","get","concat","then","res","data","length","catch","Promise","all","encodeURIComponent","_ref2","single","multi","list","Array","isArray","_first$addresses","first","customer_id","addr","primary_address","addresses","address1","params","limit","c","prev","_objectSpread","err","_err$response","_err$response$data","_err$response2","detail","response","message","status","String","finally","timeoutId","setTimeout","async","_unused","clearTimeout","addByVariantId","variantId","quantity","arguments","undefined","items","variant","Number","discount","_unused2","handleItemChange","useMemo","sum","reduce","acc","it","_it$variant","price","Math","max","toFixed","_unused3","idx","field","value","map","item","i","handler","e","productId","id","window","addEventListener","removeEventListener","user_id","mounted","loadCart","saveCart","handleCreateOrder","_orderData$address","_orderData$city","_orderData$province","_orderData$zip","trim","safePhone","startsWith","slice","orderPayload","variant_id","title","delivery","payment_term","create_customer_if_missing","post","_unused5","alert","_firstItem$variant","_firstItem$variant2","_firstItem$variant3","_firstItem$variant4","fullName","last","split","itemsCount","subtotal","_it$variant2","totalDiscount","total","createdAtDate","Date","months","dd","getDate","padStart","mmm","getMonth","hh","getHours","mm","getMinutes","ampm","createdAtDisplay","getFullYear","isCOD","toLowerCase","includes","isPaid","paymentMethod","orderName","creationResult","order_admin_link","pop","draft_order_id","toISOString","firstItem","productImageUrl","image_src","productTitle","product_title","productVariantTitle","qty","moreCount","html","_ref3","currency","addressName","address2","provinceCode","buildOrderLabelHtml","container","document","createElement","style","position","left","top","zIndex","innerHTML","body","appendChild","ticketEl","querySelector","canvas","html2canvas","scale","backgroundColor","useCORS","blob","resolve","toBlob","removeChild","file","File","now","type","fd","FormData","append","arabicCaption","join","headers","_unused4","generateAndSendOrderLabel","handleOrderDataChange","_jsxs","className","children","onClick","v","_jsx","FaShopify","_Fragment","onChange","_c$addresses","target","find","x","d","a","total_orders","o","href","admin_url","rel","order_number","created_at","toLocaleString","financial_status","fulfillment_status","total_price","navigator","clipboard","writeText","placeholder","_unused6","_c$addresses2","onSubmit","preventDefault","autoComplete","required","disabled","prov","rows","src","alt","onError","currentTarget","display","product","variants","handleAddVariant","img","priceNum","qtyNum","discountNum","min","filter","_","removeOrderItem","p","q","opt","zone","checked","htmlFor","shopify_admin_link"],"sourceRoot":""}