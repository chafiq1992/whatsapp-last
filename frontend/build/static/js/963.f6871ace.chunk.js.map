{"version":3,"file":"static/js/963.f6871ace.chunk.js","mappings":"uKAGe,SAASA,EAAcC,GAAe,IAAd,QAAEC,GAASD,EAChD,MAAOE,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,CAAEG,SAAU,GAAIC,KAAM,GAAIC,SAAU,GAAIC,UAAU,KAC5EC,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCS,EAAYC,IAAiBV,EAAAA,EAAAA,UAAS,KACtCW,EAAYC,IAAiBZ,EAAAA,EAAAA,WAAS,GAEvCa,EAAaC,UACjB,IACE,MAAMC,QAAYC,EAAAA,EAAIC,IAAI,iBAC1BlB,EAAUgB,EAAIG,MAAQ,GACxB,CAAE,MAAOC,GAAI,IAGfC,EAAAA,EAAAA,YAAU,KAAQP,MAAiB,KAEnCO,EAAAA,EAAAA,YAAU,KACR,WACE,IACE,MAAML,QAAYC,EAAAA,EAAIC,IAAI,sBAC1BP,EAAcW,MAAMC,QAAQP,EAAIG,MAAQH,EAAIG,KAAO,GACrD,CAAE,MAAOC,GAAI,CACd,EALD,KAMC,IAEH,MAmBMI,EAAS,GAAAC,OAAMC,OAAOC,SAASC,OAAM,kBAErCC,EAAkBA,CAACC,EAAKC,EAAOC,KACnCrB,GAAcsB,GAAQA,EAAKC,KAAI,CAACC,EAAKC,IAAMA,IAAMN,GAAGO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQF,GAAG,IAAE,CAACJ,GAAQC,IAAUG,OAetF,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kEAAkEC,QAAS1C,EAAQ2C,UAChGC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2EAA2EC,QAAUpB,GAAIA,EAAEuB,kBAAkBF,SAAA,EAC1HC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,yCAAwCE,SAAA,EACrDH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBE,SAAC,qBACtCH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gCAAgCC,QAAS1C,EAAQ2C,SAAC,eAGtEC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wCAAuCE,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qCAAoCE,SAAA,EACjDH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBE,SAAC,eACjCC,EAAAA,EAAAA,MAAA,QAAME,SAhDI7B,UAElB,GADAK,EAAEyB,iBACG3C,EAAKE,UAAaF,EAAKI,SAA5B,CACAG,GAAW,GACX,UACQQ,EAAAA,EAAI6B,KAAK,gBAAiB5C,GAChCC,EAAQ,CAAEC,SAAU,GAAIC,KAAM,GAAIC,SAAU,GAAIC,UAAU,UACpDO,GACR,CAAC,QACCL,GAAW,EACb,CAR4C,GA8CP8B,UAAU,sBAAqBE,SAAA,EAC1DH,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0BAA0BQ,YAAY,WAAWf,MAAO9B,EAAKE,SAAU4C,SAAW5B,GAAIjB,GAAOkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAInC,GAAI,IAAEE,SAAUgB,EAAE6B,OAAOjB,YAC7IM,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0BAA0BQ,YAAY,kBAAkBf,MAAO9B,EAAKG,KAAM2C,SAAW5B,GAAIjB,GAAOkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAInC,GAAI,IAAEG,KAAMe,EAAE6B,OAAOjB,YAC5IM,EAAAA,EAAAA,KAAA,SAAOC,UAAU,0BAA0BW,KAAK,WAAWH,YAAY,WAAWf,MAAO9B,EAAKI,SAAU0C,SAAW5B,GAAIjB,GAAOkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAInC,GAAI,IAAEI,SAAUc,EAAE6B,OAAOjB,YAC7JU,EAAAA,EAAAA,MAAA,SAAOH,UAAU,kCAAiCE,SAAA,EAChDH,EAAAA,EAAAA,KAAA,SAAOY,KAAK,WAAWC,QAASjD,EAAKK,SAAUyC,SAAW5B,GAAIjB,GAAOkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAInC,GAAI,IAAEK,SAAUa,EAAE6B,OAAOE,aAAc,iBAGpHb,EAAAA,EAAAA,KAAA,UAAQc,SAAU5C,EAAS+B,UAAU,yDAAwDE,SAAEjC,EAAU,eAAY,2BAIzHkC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qCAAoCE,SAAA,EACjDH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBE,SAAC,YACjCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,mCAAkCE,SAAA,CAC9C1C,EAAOmC,KAAImB,IACVX,EAAAA,EAAAA,MAAA,OAAsBH,UAAU,4DAA2DE,SAAA,EACzFC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaE,SAAEY,EAAEhD,MAAQgD,EAAEjD,YAC1CsC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,wBAAuBE,SAAA,CAAEY,EAAEjD,SAAUiD,EAAE9C,SAAW,cAAa,UAEhF+B,EAAAA,EAAAA,KAAA,UAAQC,UAAU,+BAA+BC,QAASA,IAxDtDzB,WACbW,OAAO4B,QAAQ,gBAAD7B,OAAiBrB,EAAQ,cACtCa,EAAAA,EAAIsC,OAAO,iBAAD9B,OAAkB+B,mBAAmBpD,WAC/CU,MAqDsE2C,CAAYJ,EAAEjD,UAAUqC,SAAC,aAL/EY,EAAEjD,YAQK,IAAlBL,EAAO2D,SACNpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBE,SAAC,6BAM/CC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qCAAoCE,SAAA,EACjDH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBE,SAAC,uBACjCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0BAAyBE,SAAA,EACtCH,EAAAA,EAAAA,KAAA,SAAOC,UAAU,iCAAiCoB,UAAQ,EAAC3B,MAAOR,KAClEc,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gCAAgCC,QAASA,IAAMoB,UAAUC,UAAUC,UAAUtC,GAAWiB,SAAC,aAE7GH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BE,SAAC,sGAG5CC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qCAAoCE,SAAA,EACjDH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBE,SAAC,gCACjCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,YAAWE,SAAA,CACvB/B,EAAWwB,KAAI,CAACC,EAAKL,KACpBY,EAAAA,EAAAA,MAAA,OAAeH,UAAU,0BAAyBE,SAAA,EAChDH,EAAAA,EAAAA,KAAA,SACEC,UAAU,+BACVQ,YAAY,eACZf,MAAOG,EAAI4B,MAAQ,GACnBf,SAAW5B,GAAMS,EAAgBC,EAAK,OAAQV,EAAE6B,OAAOjB,UAEzDM,EAAAA,EAAAA,KAAA,SACEC,UAAU,iCACVQ,YAAY,sBACZf,MAAOG,EAAI6B,OAAS,GACpBhB,SAAW5B,GAAMS,EAAgBC,EAAK,QAASV,EAAE6B,OAAOjB,UAE1DM,EAAAA,EAAAA,KAAA,UAAQC,UAAU,+BAA+BC,QAASA,IA/E/CV,IAAQnB,GAAcsB,GAAQA,EAAKgC,QAAO,CAACC,EAAG9B,IAAMA,IAAMN,MA+ELqC,CAAgBrC,GAAKW,SAAC,aAb9EX,KAgBW,IAAtBpB,EAAWgD,SACVpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBE,SAAC,yCAEzCC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,0BAAyBE,SAAA,EACtCH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,gCAAgCC,QAvFzC4B,IAAMzD,GAAcsB,GAAQ,IAAIA,EAAM,CAAE+B,MAAO,GAAID,KAAM,OAuFMtB,SAAC,eACzEH,EAAAA,EAAAA,KAAA,UAAQc,SAAUxC,EAAY2B,UAAU,oDAAoDC,QAtFjFzB,UACrBF,GAAc,GACd,IACE,MAAMwD,EAAU3D,EAAWuD,QAAOK,IAAMA,EAAEN,OAAS,IAAIO,SAAQrC,KAAIoC,IAAC,CAAON,MAAOM,EAAEN,MAAMO,OAAQR,MAAOO,EAAEP,MAAQ,IAAIQ,iBACjHtD,EAAAA,EAAI6B,KAAK,qBAAsB,CAAE0B,QAASH,GAClD,CAAC,QACCxD,GAAc,EAChB,GA+E8H4B,SAAE7B,EAAa,eAAY,qBAGnJ0B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BE,SAAC,6FAKpD,C","sources":["AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from './api';\r\n\r\nexport default function AdminDashboard({ onClose }) {\r\n  const [agents, setAgents] = useState([]);\r\n  const [form, setForm] = useState({ username: '', name: '', password: '', is_admin: false });\r\n  const [loading, setLoading] = useState(false);\r\n  const [tagOptions, setTagOptions] = useState([]);\r\n  const [savingTags, setSavingTags] = useState(false);\r\n\r\n  const loadAgents = async () => {\r\n    try {\r\n      const res = await api.get('/admin/agents');\r\n      setAgents(res.data || []);\r\n    } catch (e) {}\r\n  };\r\n\r\n  useEffect(() => { loadAgents(); }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await api.get('/admin/tag-options');\r\n        setTagOptions(Array.isArray(res.data) ? res.data : []);\r\n      } catch (e) {}\r\n    })();\r\n  }, []);\r\n\r\n  const createAgent = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.username || !form.password) return;\r\n    setLoading(true);\r\n    try {\r\n      await api.post('/admin/agents', form);\r\n      setForm({ username: '', name: '', password: '', is_admin: false });\r\n      await loadAgents();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteAgent = async (username) => {\r\n    if (!window.confirm(`Delete agent ${username}?`)) return;\r\n    await api.delete(`/admin/agents/${encodeURIComponent(username)}`);\r\n    await loadAgents();\r\n  };\r\n\r\n  const inboxLink = `${window.location.origin}/?inbox=shared`;\r\n\r\n  const updateTagOption = (idx, field, value) => {\r\n    setTagOptions(prev => prev.map((opt, i) => i === idx ? { ...opt, [field]: value } : opt));\r\n  };\r\n\r\n  const addTagOption = () => setTagOptions(prev => [...prev, { label: '', icon: '' }]);\r\n  const removeTagOption = (idx) => setTagOptions(prev => prev.filter((_, i) => i !== idx));\r\n  const saveTagOptions = async () => {\r\n    setSavingTags(true);\r\n    try {\r\n      const cleaned = tagOptions.filter(o => (o.label || '').trim()).map(o => ({ label: o.label.trim(), icon: (o.icon || '').trim() }));\r\n      await api.post('/admin/tag-options', { options: cleaned });\r\n    } finally {\r\n      setSavingTags(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\" onClick={onClose}>\r\n      <div className=\"w-[720px] max-w-[90vw] bg-gray-900 border border-gray-700 rounded-lg p-4\" onClick={(e)=>e.stopPropagation()}>\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <h2 className=\"text-lg font-semibold\">Admin Dashboard</h2>\r\n          <button className=\"px-2 py-1 bg-gray-700 rounded\" onClick={onClose}>✕</button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n          <div className=\"border border-gray-800 rounded p-3\">\r\n            <h3 className=\"font-medium mb-2\">Add Agent</h3>\r\n            <form onSubmit={createAgent} className=\"flex flex-col gap-2\">\r\n              <input className=\"p-2 bg-gray-800 rounded\" placeholder=\"username\" value={form.username} onChange={(e)=>setForm({ ...form, username: e.target.value })} />\r\n              <input className=\"p-2 bg-gray-800 rounded\" placeholder=\"name (optional)\" value={form.name} onChange={(e)=>setForm({ ...form, name: e.target.value })} />\r\n              <input className=\"p-2 bg-gray-800 rounded\" type=\"password\" placeholder=\"password\" value={form.password} onChange={(e)=>setForm({ ...form, password: e.target.value })} />\r\n              <label className=\"text-sm flex items-center gap-2\">\r\n                <input type=\"checkbox\" checked={form.is_admin} onChange={(e)=>setForm({ ...form, is_admin: e.target.checked })} />\r\n                Make admin\r\n              </label>\r\n              <button disabled={loading} className=\"mt-1 px-3 py-2 bg-blue-600 rounded disabled:opacity-50\">{loading ? 'Saving…' : 'Create / Update'}</button>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"border border-gray-800 rounded p-3\">\r\n            <h3 className=\"font-medium mb-2\">Agents</h3>\r\n            <div className=\"space-y-2 max-h-64 overflow-auto\">\r\n              {agents.map(a => (\r\n                <div key={a.username} className=\"flex items-center justify-between bg-gray-800 rounded p-2\">\r\n                  <div>\r\n                    <div className=\"font-medium\">{a.name || a.username}</div>\r\n                    <div className=\"text-xs text-gray-400\">{a.username}{a.is_admin ? ' · admin' : ''}</div>\r\n                  </div>\r\n                  <button className=\"px-2 py-1 bg-red-600 rounded\" onClick={()=>deleteAgent(a.username)}>Delete</button>\r\n                </div>\r\n              ))}\r\n              {agents.length === 0 && (\r\n                <div className=\"text-sm text-gray-400\">No agents yet.</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4 border-t border-gray-800 pt-3\">\r\n          <h3 className=\"font-medium mb-1\">Shared Inbox Link</h3>\r\n          <div className=\"flex gap-2 items-center\">\r\n            <input className=\"flex-1 p-2 bg-gray-800 rounded\" readOnly value={inboxLink} />\r\n            <button className=\"px-3 py-2 bg-gray-700 rounded\" onClick={() => navigator.clipboard.writeText(inboxLink)}>Copy</button>\r\n          </div>\r\n          <p className=\"text-xs text-gray-400 mt-1\">Share this link with your agents to access the inbox. Use the filters to view per-agent tabs.</p>\r\n        </div>\r\n\r\n        <div className=\"mt-4 border-t border-gray-800 pt-3\">\r\n          <h3 className=\"font-medium mb-2\">Tag Options (icon + label)</h3>\r\n          <div className=\"space-y-2\">\r\n            {tagOptions.map((opt, idx) => (\r\n              <div key={idx} className=\"flex items-center gap-2\">\r\n                <input\r\n                  className=\"w-24 p-2 bg-gray-800 rounded\"\r\n                  placeholder=\"icon (emoji)\"\r\n                  value={opt.icon || ''}\r\n                  onChange={(e) => updateTagOption(idx, 'icon', e.target.value)}\r\n                />\r\n                <input\r\n                  className=\"flex-1 p-2 bg-gray-800 rounded\"\r\n                  placeholder=\"label (e.g. Urgent)\"\r\n                  value={opt.label || ''}\r\n                  onChange={(e) => updateTagOption(idx, 'label', e.target.value)}\r\n                />\r\n                <button className=\"px-2 py-2 bg-red-600 rounded\" onClick={() => removeTagOption(idx)}>Delete</button>\r\n              </div>\r\n            ))}\r\n            {tagOptions.length === 0 && (\r\n              <div className=\"text-sm text-gray-400\">No tag options yet. Add some below.</div>\r\n            )}\r\n            <div className=\"flex items-center gap-2\">\r\n              <button className=\"px-3 py-2 bg-gray-700 rounded\" onClick={addTagOption}>+ Add tag</button>\r\n              <button disabled={savingTags} className=\"px-3 py-2 bg-blue-600 rounded disabled:opacity-50\" onClick={saveTagOptions}>{savingTags ? 'Saving…' : 'Save tags'}</button>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-xs text-gray-400 mt-1\">These options appear in the chat list filters and when editing conversation tags.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":["AdminDashboard","_ref","onClose","agents","setAgents","useState","form","setForm","username","name","password","is_admin","loading","setLoading","tagOptions","setTagOptions","savingTags","setSavingTags","loadAgents","async","res","api","get","data","e","useEffect","Array","isArray","inboxLink","concat","window","location","origin","updateTagOption","idx","field","value","prev","map","opt","i","_objectSpread","_jsx","className","onClick","children","_jsxs","stopPropagation","onSubmit","preventDefault","post","placeholder","onChange","target","type","checked","disabled","a","confirm","delete","encodeURIComponent","deleteAgent","length","readOnly","navigator","clipboard","writeText","icon","label","filter","_","removeTagOption","addTagOption","cleaned","o","trim","options"],"sourceRoot":""}